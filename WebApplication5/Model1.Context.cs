//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication5
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Taller_MecanicoEntities : DbContext
    {
        public Taller_MecanicoEntities()
            : base("name=Taller_MecanicoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Caja> Caja { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Servicio> Servicio { get; set; }
        public virtual DbSet<ServicioDetalle> ServicioDetalle { get; set; }
        public virtual DbSet<TipoCliente> TipoCliente { get; set; }
        public virtual DbSet<Vehiculo> Vehiculo { get; set; }
    
        public virtual int Caja_Actualizar(Nullable<int> idcaja, Nullable<int> idcliente, Nullable<System.DateTime> fecha, string detalle, Nullable<decimal> importe)
        {
            var idcajaParameter = idcaja.HasValue ?
                new ObjectParameter("idcaja", idcaja) :
                new ObjectParameter("idcaja", typeof(int));
    
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var importeParameter = importe.HasValue ?
                new ObjectParameter("importe", importe) :
                new ObjectParameter("importe", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Caja_Actualizar", idcajaParameter, idclienteParameter, fechaParameter, detalleParameter, importeParameter);
        }
    
        public virtual int Caja_Agregar(Nullable<int> iDCliente, Nullable<System.DateTime> fecha, Nullable<decimal> importe, string detalle)
        {
            var iDClienteParameter = iDCliente.HasValue ?
                new ObjectParameter("IDCliente", iDCliente) :
                new ObjectParameter("IDCliente", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var importeParameter = importe.HasValue ?
                new ObjectParameter("importe", importe) :
                new ObjectParameter("importe", typeof(decimal));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Caja_Agregar", iDClienteParameter, fechaParameter, importeParameter, detalleParameter);
        }
    
        public virtual int Caja_Baja(Nullable<int> idcaja)
        {
            var idcajaParameter = idcaja.HasValue ?
                new ObjectParameter("idcaja", idcaja) :
                new ObjectParameter("idcaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Caja_Baja", idcajaParameter);
        }
    
        public virtual ObjectResult<Caja_TraerCliente_Result> Caja_TraerCliente(Nullable<int> idcliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Caja_TraerCliente_Result>("Caja_TraerCliente", idclienteParameter);
        }
    
        public virtual ObjectResult<Caja_TraerUno_Result> Caja_TraerUno(Nullable<int> idcaja)
        {
            var idcajaParameter = idcaja.HasValue ?
                new ObjectParameter("idcaja", idcaja) :
                new ObjectParameter("idcaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Caja_TraerUno_Result>("Caja_TraerUno", idcajaParameter);
        }
    
        public virtual int Cliente_Actualizar(Nullable<int> idcliente, string nombre, string cuit_dni, string telefono, string mail, Nullable<int> idtipocliente, string observacion, string direccion)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var cuit_dniParameter = cuit_dni != null ?
                new ObjectParameter("cuit_dni", cuit_dni) :
                new ObjectParameter("cuit_dni", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var idtipoclienteParameter = idtipocliente.HasValue ?
                new ObjectParameter("idtipocliente", idtipocliente) :
                new ObjectParameter("idtipocliente", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cliente_Actualizar", idclienteParameter, nombreParameter, cuit_dniParameter, telefonoParameter, mailParameter, idtipoclienteParameter, observacionParameter, direccionParameter);
        }
    
        public virtual int Cliente_Agregar(string nombre, string cuit_Dni, string telefono, string mail, Nullable<int> iDTipoCliente, string observaciones, string direccion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var cuit_DniParameter = cuit_Dni != null ?
                new ObjectParameter("Cuit_Dni", cuit_Dni) :
                new ObjectParameter("Cuit_Dni", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var iDTipoClienteParameter = iDTipoCliente.HasValue ?
                new ObjectParameter("IDTipoCliente", iDTipoCliente) :
                new ObjectParameter("IDTipoCliente", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cliente_Agregar", nombreParameter, cuit_DniParameter, telefonoParameter, mailParameter, iDTipoClienteParameter, observacionesParameter, direccionParameter);
        }
    
        public virtual int Cliente_Baja(Nullable<int> idcliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cliente_Baja", idclienteParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Cliente_Deuda(Nullable<int> idcliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Cliente_Deuda", idclienteParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Cliente_SaldoAFavor(Nullable<int> idcliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Cliente_SaldoAFavor", idclienteParameter);
        }
    
        public virtual ObjectResult<Cliente_TraerTodo_Result> Cliente_TraerTodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_TraerTodo_Result>("Cliente_TraerTodo");
        }
    
        public virtual ObjectResult<Cliente_TraerUno_Result> Cliente_TraerUno(Nullable<int> idcliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_TraerUno_Result>("Cliente_TraerUno", idclienteParameter);
        }
    
        public virtual ObjectResult<Cliente_TraerUnoCodigo_Result> Cliente_TraerUnoCodigo(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_TraerUnoCodigo_Result>("Cliente_TraerUnoCodigo", nombreParameter);
        }
    
        public virtual int Servicio_Actualizar(Nullable<int> idservicio, Nullable<int> idcliente, Nullable<int> idvehiculo, Nullable<long> km, Nullable<int> idestado)
        {
            var idservicioParameter = idservicio.HasValue ?
                new ObjectParameter("idservicio", idservicio) :
                new ObjectParameter("idservicio", typeof(int));
    
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var idvehiculoParameter = idvehiculo.HasValue ?
                new ObjectParameter("idvehiculo", idvehiculo) :
                new ObjectParameter("idvehiculo", typeof(int));
    
            var kmParameter = km.HasValue ?
                new ObjectParameter("km", km) :
                new ObjectParameter("km", typeof(long));
    
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Servicio_Actualizar", idservicioParameter, idclienteParameter, idvehiculoParameter, kmParameter, idestadoParameter);
        }
    
        public virtual int Servicio_Agregar(Nullable<int> iDCliente, Nullable<int> iDVehiculo, Nullable<long> km, Nullable<int> iDEstado)
        {
            var iDClienteParameter = iDCliente.HasValue ?
                new ObjectParameter("IDCliente", iDCliente) :
                new ObjectParameter("IDCliente", typeof(int));
    
            var iDVehiculoParameter = iDVehiculo.HasValue ?
                new ObjectParameter("IDVehiculo", iDVehiculo) :
                new ObjectParameter("IDVehiculo", typeof(int));
    
            var kmParameter = km.HasValue ?
                new ObjectParameter("Km", km) :
                new ObjectParameter("Km", typeof(long));
    
            var iDEstadoParameter = iDEstado.HasValue ?
                new ObjectParameter("IDEstado", iDEstado) :
                new ObjectParameter("IDEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Servicio_Agregar", iDClienteParameter, iDVehiculoParameter, kmParameter, iDEstadoParameter);
        }
    
        public virtual int Servicio_Baja(Nullable<int> idservicio)
        {
            var idservicioParameter = idservicio.HasValue ?
                new ObjectParameter("idservicio", idservicio) :
                new ObjectParameter("idservicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Servicio_Baja", idservicioParameter);
        }
    
        public virtual ObjectResult<Servicio_TraerTodo_Result> Servicio_TraerTodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Servicio_TraerTodo_Result>("Servicio_TraerTodo");
        }
    
        public virtual int Servicio_TraerTotalCliente(Nullable<int> idcliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Servicio_TraerTotalCliente", idclienteParameter);
        }
    
        public virtual int Servicio_TraerTotalVehiculo(Nullable<int> idcliente, Nullable<int> idvehiculo)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var idvehiculoParameter = idvehiculo.HasValue ?
                new ObjectParameter("idvehiculo", idvehiculo) :
                new ObjectParameter("idvehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Servicio_TraerTotalVehiculo", idclienteParameter, idvehiculoParameter);
        }
    
        public virtual ObjectResult<Servicio_TraerUno_Result> Servicio_TraerUno(Nullable<int> idservicio)
        {
            var idservicioParameter = idservicio.HasValue ?
                new ObjectParameter("idservicio", idservicio) :
                new ObjectParameter("idservicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Servicio_TraerUno_Result>("Servicio_TraerUno", idservicioParameter);
        }
    
        public virtual int ServicioDetalle_Actualizar(Nullable<int> idservicio, string detalle, Nullable<decimal> importe)
        {
            var idservicioParameter = idservicio.HasValue ?
                new ObjectParameter("idservicio", idservicio) :
                new ObjectParameter("idservicio", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var importeParameter = importe.HasValue ?
                new ObjectParameter("importe", importe) :
                new ObjectParameter("importe", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioDetalle_Actualizar", idservicioParameter, detalleParameter, importeParameter);
        }
    
        public virtual int ServicioDetalle_Agregar(string detalle, Nullable<decimal> importe)
        {
            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));
    
            var importeParameter = importe.HasValue ?
                new ObjectParameter("Importe", importe) :
                new ObjectParameter("Importe", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioDetalle_Agregar", detalleParameter, importeParameter);
        }
    
        public virtual int ServicioDetalle_Baja(Nullable<int> idservicio)
        {
            var idservicioParameter = idservicio.HasValue ?
                new ObjectParameter("idservicio", idservicio) :
                new ObjectParameter("idservicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioDetalle_Baja", idservicioParameter);
        }
    
        public virtual ObjectResult<ServicioDetalle_Traer_Result> ServicioDetalle_Traer(Nullable<int> idservicio)
        {
            var idservicioParameter = idservicio.HasValue ?
                new ObjectParameter("idservicio", idservicio) :
                new ObjectParameter("idservicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServicioDetalle_Traer_Result>("ServicioDetalle_Traer", idservicioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> TotalDeuda()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("TotalDeuda");
        }
    
        public virtual ObjectResult<Nullable<decimal>> TotalSaldoAFavor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("TotalSaldoAFavor");
        }
    
        public virtual int Vehiculo_Actualizar(Nullable<int> idvehiculo, string marca, string modelo, string patente, Nullable<long> km, Nullable<int> anio, string chasis, string motor, Nullable<int> idcliente)
        {
            var idvehiculoParameter = idvehiculo.HasValue ?
                new ObjectParameter("idvehiculo", idvehiculo) :
                new ObjectParameter("idvehiculo", typeof(int));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var patenteParameter = patente != null ?
                new ObjectParameter("patente", patente) :
                new ObjectParameter("patente", typeof(string));
    
            var kmParameter = km.HasValue ?
                new ObjectParameter("km", km) :
                new ObjectParameter("km", typeof(long));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var chasisParameter = chasis != null ?
                new ObjectParameter("chasis", chasis) :
                new ObjectParameter("chasis", typeof(string));
    
            var motorParameter = motor != null ?
                new ObjectParameter("motor", motor) :
                new ObjectParameter("motor", typeof(string));
    
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Vehiculo_Actualizar", idvehiculoParameter, marcaParameter, modeloParameter, patenteParameter, kmParameter, anioParameter, chasisParameter, motorParameter, idclienteParameter);
        }
    
        public virtual int Vehiculo_Agregar(string marca, Nullable<int> anio, string chasis, string motor, string modelo, string patente, Nullable<long> km, Nullable<int> iDCliente)
        {
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var chasisParameter = chasis != null ?
                new ObjectParameter("Chasis", chasis) :
                new ObjectParameter("Chasis", typeof(string));
    
            var motorParameter = motor != null ?
                new ObjectParameter("Motor", motor) :
                new ObjectParameter("Motor", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var patenteParameter = patente != null ?
                new ObjectParameter("Patente", patente) :
                new ObjectParameter("Patente", typeof(string));
    
            var kmParameter = km.HasValue ?
                new ObjectParameter("Km", km) :
                new ObjectParameter("Km", typeof(long));
    
            var iDClienteParameter = iDCliente.HasValue ?
                new ObjectParameter("IDCliente", iDCliente) :
                new ObjectParameter("IDCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Vehiculo_Agregar", marcaParameter, anioParameter, chasisParameter, motorParameter, modeloParameter, patenteParameter, kmParameter, iDClienteParameter);
        }
    
        public virtual int Vehiculo_Baja(Nullable<int> idvehiculo)
        {
            var idvehiculoParameter = idvehiculo.HasValue ?
                new ObjectParameter("idvehiculo", idvehiculo) :
                new ObjectParameter("idvehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Vehiculo_Baja", idvehiculoParameter);
        }
    
        public virtual ObjectResult<Vehiculo_TraerTodo_Result> Vehiculo_TraerTodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vehiculo_TraerTodo_Result>("Vehiculo_TraerTodo");
        }
    
        public virtual ObjectResult<Vehiculo_TraerUno_Result> Vehiculo_TraerUno(Nullable<int> idvehiculo)
        {
            var idvehiculoParameter = idvehiculo.HasValue ?
                new ObjectParameter("idvehiculo", idvehiculo) :
                new ObjectParameter("idvehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vehiculo_TraerUno_Result>("Vehiculo_TraerUno", idvehiculoParameter);
        }
    
        public virtual ObjectResult<Vehiculo_TraerUnoCodigo_Result> Vehiculo_TraerUnoCodigo(string patente)
        {
            var patenteParameter = patente != null ?
                new ObjectParameter("patente", patente) :
                new ObjectParameter("patente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vehiculo_TraerUnoCodigo_Result>("Vehiculo_TraerUnoCodigo", patenteParameter);
        }
    }
}
